'@fixture TestCafe Example Page';

'@page http://testcafe.devexpress.com/Example';

'@test'['act.type examples'] = {
    'Type name': function () {
        act.type($('#Developer_Name'), 'Peter');
    },
    'Replace with last name': function () {
        act.type($('#Developer_Name'), 'Paker', {
            replace: true
        });
    },
    'Update last name': function () {
        act.type($('#Developer_Name'), 'r', {
            caretPos: 2
        });
    },
    'Check result': function () {
        eq($('#Developer_Name').val(), 'Parker');
    }
};

'@test'['act.click, array parameter, ok() assertion'] = {
    'Click two checkbox labels': function () {
        var labels = [$(':containsExcludeChildren(Support for testing on remote devices)'),
            $(':containsExcludeChildren(Reusing existing JavaScript code for testing)')];
        act.click(labels);
    },
    'Confirm checked state': function () {
        ok($('#testing-on-remote-devices').is(':checked'));
        ok($('#re-using-existing-javascript').is(':checked'));
    }
};

'@test'['act.click on an input, eq() assertion'] = {
    'Type name': function () {
        act.type(getInput(), 'Peter Parker');
    },
    'Move caret position': function () {
        act.click(getInput(), {
            caretPos: 5
        });
    },
    'Erase a character': function () {
        act.press('backspace');
    },
    'Check result': function () {
        eq(getInput().val(), 'Pete Parker');
    }
};

'@test'['act.press example'] = {
    'Type name': function () {
        act.type(getInput(), 'Peter Parker');
    },
    'Erase Peter': function () {
        act.press('home right . delete delete delete delete');
    },
    'Check result': function () {
        eq(getInput().val(), 'P. Parker');
    }
};

'@test'['ok() vs notOk() assertions'] = {
    'Check comments area is disabled': function () {
        ok($('#Developer_Comments').is(':disabled'));
    },
    'Click label "I have tried TestCafe"': function () {
        var label = $(':containsExcludeChildren(I have tried TestCafe)');
        act.click(label);
    },
    'Check comments area is enabled': function () {
        notOk($('#Developer_Comments').is(':disabled'));
    }
};

'@test'['eq() assertion example'] = {
    'Type name': function () {
        act.type(getInput(), 'Peter Parker');
    },
    'Submit form': function () {
        var submitButton = $('.button.blue.fix-width-180');
        act.click(submitButton);
    },
    'Check message': function () {
        var header = $('.article-header');
        eq(header.html(), 'Thank You, Peter Parker!');
    }
};

'@test'['act.drag example'] = {
    'Click label "I have tried TestCafe"': function () {
        var label = $(':containsExcludeChildren(I have tried TestCafe)');
        act.click(label);
    },
    'Check initial slider value': function () {
        eq($('#Developer_Rating').val(), 0);
    },
    'Drag slider handle': function () {
        var sliderHandle = $('.ui-slider-handle');
        act.drag(sliderHandle, 357, 0, {
            offsetX: 10,
            offsetY: 10
        });
    },
    'Check resulting slider value': function () {
        eq($('#Developer_Rating').val(), 7);
    }
};

'@test'['act.hover example'] = {
    'Hover over the combo box': function () {
        var div = $('.text-field');
        act.hover(div);
    },
    'Select "Both"': function () {
        var div = $(':containsExcludeChildren(Both)').eq(0);
        act.click(div);
    },
    'Check result': function () {
        var value = $('.text-field').html();
        eq(value, 'Both');
    }
};

'@test'['act.wait example'] = {
    'Initiate animation and wait': function () {
        $('.article-header').animate({
            opacity: 0
        }, 1e3);
        act.wait(1e4, isTransparent);
    },
    'Type': function () {
        var input = $('#Developer_Name');
        act.type(input, 'The wait is over!');
    }
};

'@test'['handleConfirm() example'] = {
    '1.Click "Populate"': function () {
        var populateFormButton = $(':containsExcludeChildren(Populate)');
        handleConfirm('OK');
        act.click(populateFormButton);
    },
    '2.Click "Submit"': function () {
        this.autoGeneratedName = $('#Developer_Name').val();
        var submitButton = $('.button.blue.fix-width-180');
        act.click(submitButton);
    },
    'Check result': function () {
        var header = $('.article-header');
        var expectedResult = 'Thank You, ' + this.autoGeneratedName + '!';
        eq(header.html(), expectedResult);
    }
};

'@test'['video example'] = {
    '1.Click "MacOS"': function () {
        var label = $(':containsExcludeChildren(MacOS)');
        act.click(label);
    },
    '2.Type a name': function () {
        var input = $('#Developer_Name');
        act.type(input, 'Peter Parker', {
            offsetX: 59,
            offsetY: 22,
            caretPos: 0
        });
    },
    '3.Hover over "Visual recorder"': function () {
        var div = $('.text-field');
        act.hover(div);
    },
    '4.Click "Both"': function () {
        var div = $(':containsExcludeChildren(Both)').eq(0);
        act.click(div, {
            offsetX: 71,
            offsetY: 12
        });
    },
    '5.Click "Submit"': function () {
        var submitButton = $('#submit-button');
        act.click(submitButton, {
            offsetX: 126,
            offsetY: 38
        });
    },
    '6. Check Result': function () {
        var header = $('.article-header');
        eq(header.html(), 'Thank You, Peter Parker!');
    }

};

//helpers
var isTransparent = function () {
    return $('.article-header').css('opacity') == 0;
};

var getInput = function () {
    return $('#Developer_Name');
};
